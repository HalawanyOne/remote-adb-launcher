import { EventEmitter } from 'events';
import { AdbTransport, WebSocket } from './AdbTransport';
export declare const WebUsbDeviceFilter: USBDeviceFilter;
export declare class AdbWebUsbTransport implements AdbTransport {
    private _usb;
    private _device;
    readonly type = "USB";
    get serial(): string;
    get name(): string;
    private _connected;
    get connected(): boolean;
    private _bytesTransferred;
    get bytesTransferred(): {
        up: number;
        down: number;
    };
    private readonly events;
    readonly ondisconnect: (listener: (e: Event) => void) => EventEmitter;
    private _inEndpointNumber;
    private _outEndpointNumber;
    constructor(usb: USB, device: USBDevice);
    private handleDisconnect;
    connect(): Promise<void>;
    private write;
    private read;
    private wsSendOrIgnore;
    private backendWriteOrIgnore;
    private readLoop;
    private writeLoopCallback;
    pipe(ws: WebSocket): Promise<void>;
    dispose(): Promise<void>;
}
